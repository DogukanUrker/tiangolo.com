name: Projects
source:
  - name: FastAPI
    link: https://github.com/tiangolo/fastapi
    description: FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.

  - name: uwsgi-nginx-flask-docker
    link: https://github.com/tiangolo/uwsgi-nginx-flask-docker
    description: Docker image with uWSGI and Nginx for Flask applications in Python running in a single container. Optionally with Alpine Linux.

  - name: uwsgi-nginx-docker
    link: https://github.com/tiangolo/uwsgi-nginx-docker
    description: Docker image with uWSGI and Nginx for applications in Python 3.7, 3.6, 3.5 and Python 2.7 (as Flask) in a single container. Optionally with Alpine Linux.

  - name: full-stack-fastapi-postgresql
    link: https://github.com/tiangolo/full-stack-fastapi-postgresql
    description: Full stack, modern web application generator. Using FastAPI, PostgreSQL as database, Docker, automatic HTTPS and more.

  - name: full-stack-fastapi-couchbase
    link: https://github.com/tiangolo/full-stack-fastapi-couchbase
    description: Full stack, modern web application generator. Using FastAPI, Couchbase as database, Docker, automatic HTTPS and more.

  - name: full-stack
    link: https://github.com/tiangolo/full-stack
    description: Full stack, modern web application generator. Using Flask, PostgreSQL DB, Docker, Swagger, automatic HTTPS and more.

  - name: DockerSwarm.rocks
    link: https://github.com/tiangolo/dockerswarm.rocks
    description: Docker Swarm mode rocks! Ideas, tools and recipes. Get a production-ready, distributed, HTTPS served, cluster in minutes, not weeks.

  - name: nginx-rtmp-docker
    link: https://github.com/tiangolo/nginx-rtmp-docker
    description: Docker image with Nginx using the nginx-rtmp-module module for live multimedia (video) streaming.

  - name: babun-docker
    link: https://github.com/tiangolo/babun-docker
    description: Use Docker Toolbox with Babun (Cygwin) in Windows.

  - name: flask-frontend-docker
    link: https://github.com/tiangolo/flask-frontend-docker
    description: Minimal project generator with a Flask backend, a modern frontend (Vue, React or Angular), a Traefik load balancer with HTTPS, all based on Docker.

  - name: uvicorn-gunicorn-fastapi-docker
    link: https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker
    description: Docker image with Uvicorn managed by Gunicorn for high-performance FastAPI web applications in Python 3.7 and 3.6 with performance auto-tuning. Optionally with Alpine Linux.

  - name: uvicorn-gunicorn-machine-learning-docker
    link: https://github.com/tiangolo/uvicorn-gunicorn-machine-learning-docker
    description: Docker image for high-performance Machine Learning web applications. With Uvicorn managed by Gunicorn in Python 3.7 and 3.6, using Conda, with CUDA and TensorFlow variants.

  - name: meinheld-gunicorn-flask-docker
    link: https://github.com/tiangolo/meinheld-gunicorn-flask-docker
    description: Docker image with Meinheld and Gunicorn for Flask applications in Python. Optionally with Alpine Linux.

  - name: python-machine-learning-docker
    link: https://github.com/tiangolo/python-machine-learning-docker
    description: Docker image with Python 3.6 and 3.7 using Conda, with CUDA variants. To serve as base image for Machine Learning projects.

  - name: uvicorn-gunicorn-starlette-docker
    link: https://github.com/tiangolo/uvicorn-gunicorn-starlette-docker
    description: Docker image with Uvicorn managed by Gunicorn for high-performance Starlette web applications in Python 3.7 and 3.6 with performance auto-tuning. Optionally with Alpine Linux.

  - name: uvicorn-gunicorn-docker
    link: https://github.com/tiangolo/uvicorn-gunicorn-docker
    description: Docker image with Uvicorn managed by Gunicorn for high-performance web applications in Python 3.7 and 3.6 with performance auto-tuning. Optionally with Alpine Linux.

  - name: full-stack-flask-couchbase
    link: https://github.com/tiangolo/full-stack-flask-couchbase
    description: Full stack, modern web application generator. Using Flask, Couchbase as database, Docker, Swagger, automatic HTTPS and more.

  - name: full-stack-flask-couchdb
    link: https://github.com/tiangolo/full-stack-flask-couchdb
    description: Full stack, modern web application generator. Using Flask, CouchDB as database, Docker, Swagger, automatic HTTPS and more.

  - name: meinheld-gunicorn-docker
    link: https://github.com/tiangolo/meinheld-gunicorn-docker
    description: Docker image with Meinheld managed by Gunicorn for high-performance WSGI (Flask, Django, etc) web applications in Python 3.7 and 3.6 with performance auto-tuning. Optionally with Alpine Linux.

  - name: medium-posts
    link: https://github.com/tiangolo/medium-posts
    description: Medium posts and related code by Sebastián Ramírez (@tiangolo)

  - name: ngx-http-client
    link: https://github.com/tiangolo/ngx-http-client
    description: Angular (4.3+) HttpClientModule with parameter encodings compatible with back ends (Node.js, Python, PHP, etc).

  - name: docker-auto-labels
    link: https://github.com/tiangolo/docker-auto-labels
    description: Generate each Docker constraint label in random nodes in the cluster.

  - name: node-frontend
    link: https://github.com/tiangolo/node-frontend
    description: Node.js Docker image with all Puppeteer dependencies installed for frontend Chrome Headless testing and default Nginx config, for multi-stage Docker building.

  - name: docker-with-compose
    link: https://github.com/tiangolo/docker-with-compose
    description: Docker image with Docker Compose installed for CI.

  - name: angular-docker-multi-stage-example
    link: https://github.com/tiangolo/angular-docker-multi-stage-example
    description: Angular in Docker with Nginx, supporting environments, built with multi-stage Docker builds.

  - name: docker-with-compose
    link: https://github.com/tiangolo/docker-with-compose
    description: Docker image with Docker Compose installed for CI.

  - name: ansible-babun-bootstrap
    link: https://github.com/tiangolo/ansible-babun-bootstrap
    description: Simple shell script to setup Ansible within Babun
